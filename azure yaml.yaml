trigger:
  branches:
    include:
      - master  # Trigger pipeline on changes to master branch


pool:
  vmImage: 'ubuntu-latest'  # Use Ubuntu for the build


variables:
  # AWS credentials (to be configured in Azure DevOps Pipeline Variables)
  awsAccessKeyId: $(AWS_ACCESS_KEY_ID)  # AWS Access Key ID
  awsSecretAccessKey: $(AWS_SECRET_ACCESS_KEY)  # AWS Secret Access Key
  awsRegion: 'us-east-1'  # AWS Region


steps:
# Step 1: Install Terraform
- task: TerraformInstaller@0
  displayName: 'Install Terraform'
  inputs:
    terraformVersion: 'latest'


# Step 2: Set up AWS Credentials for Terraform to interact with AWS
- script: |
    export AWS_ACCESS_KEY_ID=$(awsAccessKeyId)
    export AWS_SECRET_ACCESS_KEY=$(awsSecretAccessKey)
    export AWS_DEFAULT_REGION=$(awsRegion)
  displayName: 'Set up AWS credentials'


# Step 3: Initialize Terraform
- script: |
    terraform init
  displayName: 'Initialize Terraform'


# Step 4: Validate Terraform Configuration
- script: |
    terraform validate
  displayName: 'Terraform Validate'


# Step 5: Plan Terraform Deployment
- script: |
    terraform plan -out=tfplan
  displayName: 'Terraform Plan'


# Step 6: Apply Terraform Deployment (Deploy Resources)
- script: |
    terraform apply -input=false tfplan
  displayName: 'Terraform Apply'
  condition: succeeded()


# Step 7: Output the resources created
- script: |
    terraform output
  displayName: 'Terraform Output'


